#%RAML 1.0 Library
uses:
  strings: stringTypes.raml

types:
  LifecycleSpec:
    type: object
    discriminator: schedule
    properties:
      schedule: string
      cancellationPolicy: CancellationPolicy
  CancellationPolicy:
    type: object
    description: |
      Defines if and when a scheduled attempt is cancelled, or Marathon should give up to schedule any further instances.
    properties:
      stopTryingAfterNumFailures:
        type: integer
        format: int32
        description: |
          Stop scheduling more instances for an attempt when this many instances terminated abnormally. If set to 0, the attempt will never stop trying. If the attempt should be cancelled after one failure, set this to 1.
        minimum: 0
        default: 10
      stopTryingAfterSeconds:
        type: integer
        format: int32
        description: |
          Stop scheduling more instances for an attempt after this amount of seconds after starting the attempt. If set to 0, the attempt will never be cancelled.
        minimum: 0
        default: 3600
      maxDurationPerInstanceSeconds:
        type: integer
        format: int32
        description: |
          Kill a scheduled instance after this amount of seconds if it didn't finish until then. If set to 0, an instance will not be killed.
        minimum: 0
        default: 0
  ContinuousSchedule:
    type: LifecycleSpec
    description: |
      This strategy will schedule a designated amount of instances with the goal of keeping this amount up and running. Whenever instances terminate, this will schedule a replacement instance. Continuous schedules are configured with an upgradeStrategy that controls how upgrading in case of config changes or restarts are handled.
  ManualSchedule:
    type: LifecycleSpec
    description: |
      This strategy will only schedule instances upon user interaction. The goal for each attempt is to see the launched instance finish successfully. If it terminates otherwise, a new instance will eventually be scheduled, as long as the config allows.
  PeriodicSchedule:
    type: LifecycleSpec
    description: |
      This strategy will only schedule instances upon user interaction. The goal for each attempt is to see the launched instance finish successfully. If it terminates otherwise, a new instance will eventually be scheduled, as long as the config allows.
    properties:
      affectsDeployment:
        type: boolean
        default: false
